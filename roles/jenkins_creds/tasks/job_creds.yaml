#- set_fact: jenkins_extra_login_user=admin
#  when: not jenkins_extra_login_user and admin_pass.stdout != 'NONE'
#
#- set_fact: jenkins_extra_login_pass={{ admin_pass.stdout }}
#  when: not jenkins_extra_login_pass and admin_pass.stdout != 'NONE'
#
#- name: Set login opts
#  set_fact: 
#    jenkins_extra_login_opts: "-u {{ jenkins_extra_login_user }} -p {{ jenkins_extra_login_pass }}"
#  when: jenkins_extra_login_user and jenkins_extra_login_pass
#      python {{ jenkins_extra_home }}/create-credentials-config.py ssh-private-key \
#        -I {{ item.id }} -D {{ item.description }} \
#        -U {{ item.user }} -F {{ item.key_file }} -u {{ item.U }} -p {{ item.P }}\
#        {{ jenkins_extra_login_opts|default('') }}
#       JENKINS_CRUMB=$(curl --silent --cookie-jar $COOKIE_JAR $JENKINS_URL'/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)' -u $JENKINS_USER:$JENKINS_TOKEN)
#       echo $JENKINS_CRUMB
#       curl -I --cookie /tmp/jar _URL/createItem?name=yourJob --data-binary @jenkins/config.xml -H $JENKINS_CRUMB -H "Content-Type:text/xml" -u $JENKINS_USER:$JENKINS_TOKEN -v
 

- name: Copy create-credentials-config script
  copy:
    src:   "create-credentials-config.py"
    dest:  "{{ jenkins_extra_home }}/create-credentials-config.py"
    owner: "{{ jenkins_extra_user }}"
    group: "{{ jenkins_extra_group }}"
    mode:  0755

- name: Get crumb
  command: >
    curl --silent --cookie-jar /tmp/jar 'http://localhost:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
  register: crumb

- set_fact:
    crumb={{ crumb.stdout }}

- name: Create username-password credentials config on Jenkins
  command: >
      python {{ jenkins_extra_home }}/create-credentials-config.py userpass \
        -I {{ item.id }} -D {{ item.description }} \
        -U {{ item.user }} -P {{ item.pass }} \
        {{ jenkins_extra_login_opts|default('') }}
  with_items: "{{ jenkins_extra_job_creds_config }}"
  when: item.type == 'userpass'
  no_log: true

- name: Create ssh private credentials config on Jenkins
  command: >
   curl --cookie /tmp/jar -H "{{ crumb }}" -X POST 'http://admin:admin@localhost:8080/credentials/store/system/domain/_/createCredentials' \
    --data-urlencode 'json={"": "0", "credentials": {"scope": "GLOBAL","id": "{{ item.id }}","username": "{{ item.user }}","password": "", "privateKeySource":{"stapler-class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$FileOnMasterPrivateKeySource","privateKeyFile": "{{ item.key_file }}"},"description": "{{ item.description }}","stapler-class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey"}}'
  with_items: "{{ jenkins_extra_job_creds_config }}"
  when: item.type == 'ssh-private-key'

- name: Create secret text credentials config on Jenkins
  command: >
      python {{ jenkins_extra_home }}/create-credentials-config.py secret-text \
        -I {{ item.id }} -D {{ item.description }} -T {{ item.secret }} \
        {{ jenkins_extra_login_opts|default('') }}
  with_items: "{{ jenkins_extra_job_creds_config }}"
  when: item.type == 'secret-text'
